{"version":3,"sources":["App.module.css","features/animationSlice.js","store.js","utils.js","App.js","algorithms/bubble-sort.js","index.js"],"names":["module","exports","comparingSlice","createSlice","name","initialState","comparators","done","reducers","compare","state","action","push","payload","actions","addSortedIndex","configureStore","reducer","comparing","comparingReducer","delay","n","Promise","setTimeout","App","useState","array","setArray","barOne","setBarOne","barTwo","setBarTwo","isSwapping","setIsSwapping","useSelector","startBubbleSort","newArray","i","length","j","swapping","intermediateArray","temp","store","dispatch","BubbleSort","changeBarColor","elem","a","useEffect","index","Math","ceil","random","generateRandomArray","element","update","getBarColor","styles","getSwapping","className","map","item","bar","style","height","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f004d18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"App_bar__3KjH7\",\"comparing\":\"App_comparing__2nJoF\",\"swapping\":\"App_swapping__1UDNh\",\"sorted\":\"App_sorted__TI3W1\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const comparingSlice = createSlice({\n  name: \"comparing\",\n  initialState: {\n    comparators: [],\n    done: false,\n  },\n  reducers: {\n    compare: (state, action) => {\n      state.comparators.push(action.payload);\n    },\n    done: (state, action) => {\n      state.done = true;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { compare, done, addSortedIndex } = comparingSlice.actions;\n\nexport default comparingSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport comparingReducer from \"./features/animationSlice\";\n\nexport default configureStore({\n  reducer: {\n    comparing: comparingReducer,\n  },\n});\n","export const delay = (n) => {\n  n = n || 2000;\n  return new Promise((done) => {\n    setTimeout(() => {\n      done();\n    }, n);\n  });\n};\n\nexport const generateRandomArray = () => {\n  const array = [];\n  for (let index = 0; index < 25; index++) {\n    array.push(Math.ceil(Math.random() * 100));\n  }\n  return array;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { BubbleSort } from \"./algorithms/bubble-sort\";\n\nimport styles from \"./App.module.css\";\nimport { delay, generateRandomArray } from \"./utils\";\n\nconst App = () => {\n  const [array, setArray] = useState([]);\n  const [barOne, setBarOne] = useState(null);\n  const [barTwo, setBarTwo] = useState(null);\n  const [isSwapping, setIsSwapping] = useState(false);\n\n  const { comparators, done } = useSelector((state) => state.comparing);\n\n  const startBubbleSort = () => {\n    BubbleSort(array);\n  };\n\n  const changeBarColor = async (elem) => {\n    setIsSwapping(false);\n    setBarOne(elem.barOne);\n    setBarTwo(elem.barTwo);\n\n    await delay(250);\n\n    if (elem.swapping) {\n      setIsSwapping(true);\n      setArray([...elem.intermediateArray]);\n    }\n  };\n\n  // OnMount\n  useEffect(() => {\n    setArray(generateRandomArray());\n  }, []);\n\n  useEffect(() => {\n    const update = async () => {\n      if (done) {\n        for (let index = 0; index < comparators.length; index++) {\n          const element = comparators[index];\n          changeBarColor(element);\n          await delay(500);\n        }\n      }\n    };\n    update();\n  }, [done, comparators]);\n\n  const getBarColor = (index) => {\n    if (barOne === index || barTwo === index) {\n      return styles.comparing;\n    }\n    return \"\";\n  };\n\n  const getSwapping = (index) => {\n    if (barOne === index || barTwo === index) {\n      return isSwapping ? styles.swapping : \"\";\n    }\n    return \"\";\n  };\n\n  return (\n    <div className=\"container bg-green-300 p-8\">\n      <div>\n        <div className=\"bg-purple-500 flex justify-start items-end p-4 my-3.5\">\n          {array.map((item, index) => (\n            <div\n              key={index}\n              className={`${styles.bar} ${getBarColor(index)} ${getSwapping(\n                index\n              )}`}\n              style={{ height: `${item + 100}px` }}\n            >\n              <span>{item}</span>\n            </div>\n          ))}\n        </div>\n        <button\n          className=\"h-10 px-4 bg-red-400 flex justify-center items-center text-lg text-white rounded-md\"\n          onClick={() => startBubbleSort()}\n        >\n          Start Bubble Sort\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import store from \"../store\";\nimport { compare, done } from \"../features/animationSlice\";\n\nexport const BubbleSort = (array) => {\n  let newArray = [...array];\n  for (let i = 0; i < newArray.length; i++) {\n    for (let j = 0; j < newArray.length - i - 1; j++) {\n      const payload = {\n        barOne: j,\n        barTwo: j + 1,\n        swapping: false,\n        intermediateArray: [...newArray],\n      };\n      if (newArray[j] > newArray[j + 1]) {\n        let temp = newArray[j];\n        newArray[j] = newArray[j + 1];\n        newArray[j + 1] = temp;\n\n        payload.swapping = true;\n        payload.intermediateArray = [...newArray];\n      }\n      store.dispatch(compare(payload));\n    }\n  }\n  store.dispatch(done());\n  return newArray;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\n\nimport store from \"./store\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}